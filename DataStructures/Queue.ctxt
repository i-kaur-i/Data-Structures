#BlueJ class context
comment0.target=Queue
comment0.text=\n\ This\ queue\ class\ is\ about\ removing\ and\ adding\ elements\ in\n\ the\ queue.\n\ \n\ \ There\ are\ different\ ways\ to\ add\ the\ elements.\ Enenque\ is\ to\n\ \ remove\ an\ element\ from\ the\ front\ of\ the\ queue,\ dequeue\ is\ to\ add\ the\ data\n\ \ in\ the\ front\ of\ the\ queue.\ Also\ has\ methods\ to\ check\ if\ the\ queue\ is\ empty\n\ \ and\ if\ the\ class\ equals\ the\ instance\ of\ the\ class.\n\ \ \n\ @author\ Iakjot\ Kaur\n\ @version\ April\ 18th,\ 2020\n
comment1.params=obj
comment1.target=void\ enqueue(java.lang.Object)
comment1.text=\n\ This\ method\ is\ to\ remove\ an\ element\ from\ the\ front\ of\ the\ queue.\n\ \n\ if\ the\ passed\ in\ object\ isn't\ null\ and\ the\ number\ is\ less\n\ than\ the\ queue\ length\ then\ I\ added\ the\ element\ in\ the\ queue\n\ and\ make\ it\ the\ object.\ However,\ if\ the\ number\ if\ greater,\n\ then\ I\ resize\ the\ array\ and\ put\ it\ in.\ I\ exit\ the\ program\n\ if\ none\ of\ these\ occur.\n\n\ @param\:\ Object\n\ *return\:\ none\n
comment2.params=
comment2.target=java.lang.Object[]\ resize()
comment2.text=\n\ This\ method\ is\ to\ resize\ the\ array\ of\ the\ queue.\n\ \n\ made\ an\ object\ array\ and\ stored\ the\ number\ of\ elements\ inside\n\ looped\ through\ the\ array\ and\ copied\ of\ the\ stuff\n\ return\ the\ resized\ array\ \n\ \n\ @param\:\ none\n\ *return\:\ Object[]\n
comment3.params=
comment3.target=void\ show()
comment3.text=\n\ This\ method\ is\ to\ show\ the\ what\ I\ have\ in\ the\ array.\n\ \n\ Made\ a\ for\ each\ loop\ to\ get\ the\ info\n\ Made\ this\ just\ to\ test\ along\ the\ way.\n\n\ @param\:\ none\n\ *return\:\ none\n
comment4.params=
comment4.target=int\ size()
comment4.text=\n\ This\ method\ is\ to\ get\ the\ size\ of\ the\ queue.\n\ \n\ I\ returned\ the\ number\ of\ elements\ in\ the\ queue\n\ to\ get\ the\ size.\n\n\ @param\:\ none\n\ *return\:\ int\n
comment5.params=
comment5.target=java.lang.Object\ dequeue()
comment5.text=\n\ This\ method\ is\ to\ add\ the\ data\ elements\ from\ the\ front.\n\ \n\ \ I\ made\ a\ temp\ object\ and\ then\ looped\ through\n\ \ and\ made\ the\ queue\ and\ added\ the\ element.\n\n\ @param\:\ none\n\ *return\:\ Object\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\n\ This\ method\ is\ to\ print\ out\ the\ elements\ with\ commas.\n\ \n\ Started\ with\ a\ temp\ with\ an\ empty\ string\n\ and\ then\ I\ looped\ through\ and\ stored\ the\ queue\ with\n\ commas.\n\n\ @param\:\ none\n\ *return\:\ String\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\n\ This\ method\ is\ to\ check\ if\ the\ queue\ is\ empty.\n\ \n\ \ I\ looped\ through\ the\ elements\ and\ if\ the\ queue\ is\ null\n\ \ then\ I\ returned\ true\ and\ if\ not\ its\ false.\n\n\ @param\:\ ints\n\ *return\:\ none\n
comment8.params=ob
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ This\ method\ is\ to\ check\ if\ the\ object\ equals\ the\ other\ objects.\n\ \n\ \ I\ checked\ if\ the\ object\ was\ an\ instance\ of\ the\ class,\n\ \ then\ I\ made\ an\ instance\ and\ compared\ the\ sizes\ and\ the\n\ \ elements\ in\ the\ queue.If\ they\ matched,\ then\ they\n\ \ were\ considered\ equal.\n\n\ @param\:\ Object\n\ *return\:\ boolean\n
numComments=9
